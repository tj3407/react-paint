[{"/Users/tj3407/Desktop/Apps/react-paint/src/components/Paint/Paint.js":"1","/Users/tj3407/Desktop/Apps/react-paint/src/App.js":"2","/Users/tj3407/Desktop/Apps/react-paint/src/reportWebVitals.js":"3","/Users/tj3407/Desktop/Apps/react-paint/src/components/LineWeightPicker/LineWeightPicker.js":"4","/Users/tj3407/Desktop/Apps/react-paint/src/index.js":"5","/Users/tj3407/Desktop/Apps/react-paint/src/components/ColorPicker/ColorPicker.js":"6","/Users/tj3407/Desktop/Apps/react-paint/src/utils/utils.js":"7","/Users/tj3407/Desktop/Apps/react-paint/src/theme/theme.js":"8"},{"size":6198,"mtime":1610995364795,"results":"9","hashOfConfig":"10"},{"size":8138,"mtime":1610911978604,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610163676570,"results":"12","hashOfConfig":"10"},{"size":1791,"mtime":1610425865092,"results":"13","hashOfConfig":"10"},{"size":449,"mtime":1610333368609,"results":"14","hashOfConfig":"10"},{"size":920,"mtime":1610322341345,"results":"15","hashOfConfig":"10"},{"size":425,"mtime":1610817916773,"results":"16","hashOfConfig":"10"},{"size":720,"mtime":1610910532216,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"15wy1lq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tj3407/Desktop/Apps/react-paint/src/components/Paint/Paint.js",["36","37","38","39","40","41","42","43","44","45"],"import React from \"react\";\nimport { moveCaretToEnd, moveCaretToPosition } from \"../../utils/utils\";\n\nfunction useWindowSize() {\n  const [size, setSize] = React.useState([0, 0]);\n  React.useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n\nfunction Paint(props) {\n  const [width, height] = useWindowSize();\n  const canvas = React.useRef();\n  const ctx = React.useRef();\n  const lastX = React.useRef(0);\n  const lastY = React.useRef(0);\n  const rect = React.useRef({});\n  let hue = 0,\n    isDrawing = false,\n    isDrawingSquare = false,\n    isWriting = false,\n    hasInput = false;\n\n  React.useEffect(() => {\n    draw();\n  }, []);\n\n  React.useEffect(() => {\n    canvas.current.className = \"\";\n    draw();\n  }, [width, height, props.toggleClear]);\n\n  React.useEffect(() => {\n    ctx.current.strokeStyle = props.color;\n  }, [props.color]);\n\n  React.useEffect(() => {\n    if (Number(props.lineWidth) > 0) {\n      canvas.current.className = \"\";\n      canvas.current.classList.add(\"pencil\");\n      ctx.current.lineWidth = props.lineWidth;\n    }\n  }, [props.lineWidth]);\n\n  React.useEffect(() => {\n    canvas.current.className = \"\";\n    isWriting = props.isText;\n    isDrawingSquare = props.isSquare;\n\n    if (props.isSquare) {\n      canvas.current.classList.add(\"square\");\n    }\n\n    if (props.isText) {\n      canvas.current.classList.add(\"text\");\n    }\n\n    if (props.isPencil) {\n      canvas.current.classList.add(\"pencil\");\n    }\n  }, [props.isSquare, props.isPencil, props.isText]);\n\n  const handleTextClick = (e) => {\n    if (!isWriting) return;\n\n    write(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n  };\n\n  const write = (x, y) => {\n    const textarea = document.createElement(\"textarea\");\n\n    textarea.id = \"canvas-textarea\";\n    textarea.rows = 5;\n    textarea.cols = 30;\n    textarea.style.position = \"fixed\";\n    textarea.style.left = x - 4 + \"px\";\n    textarea.style.top = y - 4 + \"px\";\n\n    textarea.onblur = handleInputBlur;\n    textarea.onkeydown = handleKeyDown;\n    document.body.appendChild(textarea);\n    textarea.focus();\n    hasInput = true;\n  };\n\n  const handleKeyDown = (e) => {\n    const keyCode = e.keyCode;\n\n    if (keyCode === 9) {\n      e.target.value =\n        e.target.value.slice(0, e.target.selectionStart) +\n        \"  \" +\n        e.target.value.slice(e.target.selectionStart);\n\n      moveCaretToPosition(e.target, e.target.selectionStart);\n      return false;\n    }\n\n    if (keyCode === 57 && e.shiftKey) {\n      setTimeout(() => {\n        e.target.value =\n          e.target.value.slice(0, e.target.selectionStart) +\n          \")\" +\n          e.target.value.slice(e.target.selectionStart);\n        moveCaretToPosition(e.target, e.target.selectionStart + 1);\n      }, 0);\n    }\n\n    if (keyCode === 219 && e.shiftKey) {\n      setTimeout(() => {\n        e.target.value =\n          e.target.value.slice(0, e.target.selectionStart) +\n          \"}\" +\n          e.target.value.slice(e.target.selectionStart);\n        moveCaretToPosition(e.target, e.target.selectionStart + 1);\n      }, 0);\n    }\n  };\n\n  const handleRemoveInput = (e) => {\n    document.body.removeChild(e.target);\n    hasInput = false;\n  };\n\n  const handleInputBlur = (e) => {\n    const textArray = e.target.value.split(\"\\n\");\n    drawText(\n      textArray,\n      parseInt(e.target.style.left, 10),\n      parseInt(e.target.style.top, 10)\n    );\n    handleRemoveInput(e);\n  };\n\n  function drawText(txtArray, x, y) {\n    ctx.current.textBaseline = \"top\";\n    ctx.current.textAlign = \"left\";\n    ctx.current.fillStyle = props.color;\n    txtArray.forEach((txt, i) => ctx.current.fillText(txt, x, y + i * 16));\n  }\n\n  const draw = () => {\n    canvas.current.width = width;\n    canvas.current.height = height;\n    ctx.current = canvas.current.getContext(\"2d\");\n    ctx.current.lineJoin = \"round\";\n    ctx.current.lineCap = \"round\";\n    ctx.current.font = \"16px Arial\";\n    ctx.current.lineWidth = 20;\n  };\n\n  const drawSquare = (e) => {\n    // ctx.current.drawImage(imageObj, 0, 0);\n    rect.current.w = e.nativeEvent.offsetX - rect.current.startX;\n    rect.current.h = e.nativeEvent.offsetY - rect.current.startY;\n    // ctx.current.strokeStyle = props.color;\n    console.log(e.nativeEvent);\n    let deltaX;\n    let deltaY;\n    let deltaW;\n    let deltaH;\n    ctx.current.clearRect(\n      rect.current.startX - ctx.current.lineWidth,\n      rect.current.startY - ctx.current.lineWidth,\n      rect.current.w + ctx.current.lineWidth,\n      rect.current.h + ctx.current.lineWidth\n    );\n\n    console.log(ctx.current);\n    ctx.current.strokeRect(\n      rect.current.startX,\n      rect.current.startY,\n      rect.current.w,\n      rect.current.h\n    );\n  };\n\n  const handleMouseDown = (e) => {\n    isDrawing = true;\n    lastX.current = e.nativeEvent.offsetX;\n    lastY.current = e.nativeEvent.offsetY;\n\n    if (isDrawingSquare) {\n      console.log(e);\n      rect.current.startX = e.nativeEvent.offsetX;\n      rect.current.startY = e.nativeEvent.offsetY;\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (isDrawingSquare && isDrawing) {\n      drawSquare(e);\n    } else if (isDrawing && !isWriting) {\n      //   ctx.current.strokeStyle = `hsl(${hue}, 100%, 50%)`;\n      ctx.current.beginPath();\n      ctx.current.moveTo(lastX.current, lastY.current);\n      ctx.current.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      ctx.current.stroke();\n      [lastX.current, lastY.current] = [\n        e.nativeEvent.offsetX,\n        e.nativeEvent.offsetY,\n      ];\n\n      hue++;\n      if (hue >= 360) {\n        hue = 0;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <canvas\n        ref={canvas}\n        id=\"paint\"\n        onMouseDown={handleMouseDown}\n        onTouchStart={handleMouseDown}\n        onMouseUp={() => (isDrawing = false)}\n        onTouchEnd={() => (isDrawing = false)}\n        onMouseOut={() => (isDrawing = false)}\n        onMouseMove={handleMouseMove}\n        onTouchMove={handleMouseMove}\n        onClick={handleTextClick}\n      />\n    </div>\n  );\n}\n\nexport default Paint;\n","/Users/tj3407/Desktop/Apps/react-paint/src/App.js",[],"/Users/tj3407/Desktop/Apps/react-paint/src/reportWebVitals.js",[],"/Users/tj3407/Desktop/Apps/react-paint/src/components/LineWeightPicker/LineWeightPicker.js",["46"],"/Users/tj3407/Desktop/Apps/react-paint/src/index.js",[],["47","48"],"/Users/tj3407/Desktop/Apps/react-paint/src/components/ColorPicker/ColorPicker.js",["49"],"/Users/tj3407/Desktop/Apps/react-paint/src/utils/utils.js",[],"/Users/tj3407/Desktop/Apps/react-paint/src/theme/theme.js",[],{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":24},{"ruleId":"54","severity":1,"message":"55","line":32,"column":6,"nodeType":"56","endLine":32,"endColumn":8,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"55","line":37,"column":6,"nodeType":"56","endLine":37,"endColumn":40,"suggestions":"58"},{"ruleId":"54","severity":1,"message":"59","line":53,"column":17,"nodeType":"60","endLine":53,"endColumn":29},{"ruleId":"54","severity":1,"message":"61","line":54,"column":23,"nodeType":"60","endLine":54,"endColumn":37},{"ruleId":"50","severity":1,"message":"62","line":128,"column":5,"nodeType":"52","messageId":"53","endLine":128,"endColumn":13},{"ruleId":"50","severity":1,"message":"63","line":164,"column":9,"nodeType":"52","messageId":"53","endLine":164,"endColumn":15},{"ruleId":"50","severity":1,"message":"64","line":165,"column":9,"nodeType":"52","messageId":"53","endLine":165,"endColumn":15},{"ruleId":"50","severity":1,"message":"65","line":166,"column":9,"nodeType":"52","messageId":"53","endLine":166,"endColumn":15},{"ruleId":"50","severity":1,"message":"66","line":167,"column":9,"nodeType":"52","messageId":"53","endLine":167,"endColumn":15},{"ruleId":"54","severity":1,"message":"67","line":21,"column":29,"nodeType":"60","endLine":21,"endColumn":46},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"54","severity":1,"message":"67","line":14,"column":24,"nodeType":"60","endLine":14,"endColumn":41},"no-unused-vars","'moveCaretToEnd' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'draw'. Either include it or remove the dependency array.","ArrayExpression",["72"],["73"],"Assignments to the 'isWriting' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","MemberExpression","Assignments to the 'isDrawingSquare' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","'hasInput' is assigned a value but never used.","'deltaX' is defined but never used.","'deltaY' is defined but never used.","'deltaW' is defined but never used.","'deltaH' is defined but never used.","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","no-native-reassign",["74"],"no-negated-in-lhs",["75"],{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [draw]",{"range":"80","text":"81"},"Update the dependencies array to be: [width, height, props.toggleClear, draw]",{"range":"82","text":"83"},[849,851],"[draw]",[933,967],"[width, height, props.toggleClear, draw]"]