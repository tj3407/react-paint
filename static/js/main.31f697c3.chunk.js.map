{"version":3,"sources":["utils/utils.js","components/Paint/Paint.js","components/ColorPicker/ColorPicker.js","components/LineWeightPicker/LineWeightPicker.js","theme/theme.js","App.js","reportWebVitals.js","index.js"],"names":["moveCaretToPosition","el","position","setSelectionRange","Paint","props","React","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","height","canvas","useRef","ctx","lastX","lastY","hue","isDrawing","isWriting","useEffect","draw","current","className","toggleClear","strokeStyle","color","Number","lineWidth","classList","add","isText","isSquare","isPencil","write","x","y","textarea","document","createElement","id","rows","cols","style","left","top","onblur","handleInputBlur","onkeydown","handleKeyDown","body","appendChild","focus","e","keyCode","target","value","slice","selectionStart","shiftKey","setTimeout","txtArray","textArray","split","parseInt","textBaseline","textAlign","fillStyle","forEach","txt","i","fillText","removeChild","handleRemoveInput","getContext","lineJoin","lineCap","font","handleMouseDown","nativeEvent","offsetX","offsetY","handleMouseMove","beginPath","moveTo","lineTo","stroke","ref","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseOut","onMouseMove","onTouchMove","onClick","ColorPicker","colorPickerRef","colorHandler","useCallback","debounce","onColorChange","InputLabel","ColorLens","Input","type","onChange","LineWeightPicker","isOpen","anchorEl","placement","onLineWidthChange","open","setOpen","lineWeightHandler","handleLineWidthChange","LineWeight","Popper","transition","TransitionProps","ClickAwayListener","onClickAway","Fade","timeout","Paper","elevation","disableUnderline","defaultValue","inputProps","min","getTheme","theme","palletType","mainPrimaryColor","orange","mainContrastText","mainSecondaryColor","deepOrange","deepPurple","createMuiTheme","palette","primary","main","contrastText","secondary","originalSelection","pencil","curve","brush","text","square","circle","App","newPlacement","setColor","setlineWidth","setTheme","setToggleClear","selection","setSelection","setAnchorEl","setPlacement","setIsSquare","setIsText","setIsPencil","ThemeProvider","CssBaseline","AppBar","Toolbar","Typography","variant","IconButton","GetAppRounded","WbSunny","Switch","checked","NightsStay","Drawer","PaperProps","List","ListItem","button","selected","ListItemIcon","Create","Gesture","Brush","TextFields","event","currentTarget","prev","CheckBoxOutlineBlank","RadioButtonUnchecked","Clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.31f697c3.chunk.js","sourcesContent":["export const moveCaretToEnd = (el) => {\n  if (typeof el.selectionStart == \"number\") {\n    el.selectionStart = el.selectionEnd = el.value.length - 1;\n  } else if (typeof el.createTextRange != \"undefined\") {\n    el.focus();\n    var range = el.createTextRange();\n    range.collapse(false);\n    range.select();\n  }\n};\n\nexport const moveCaretToPosition = (el, position) => {\n  el.setSelectionRange(position - 2, position - 2);\n};\n","import React from \"react\";\nimport { moveCaretToEnd, moveCaretToPosition } from \"../../utils/utils\";\n\nfunction useWindowSize() {\n  const [size, setSize] = React.useState([0, 0]);\n  React.useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n\nfunction Paint(props) {\n  const [width, height] = useWindowSize();\n  const canvas = React.useRef();\n  const ctx = React.useRef();\n  const lastX = React.useRef(0);\n  const lastY = React.useRef(0);\n  let hue = 0,\n    isDrawing = false,\n    isWriting = false,\n    hasInput = false;\n\n  React.useEffect(() => {\n    draw();\n  }, []);\n\n  React.useEffect(() => {\n    canvas.current.className = \"\";\n    draw();\n  }, [width, height, props.toggleClear]);\n\n  React.useEffect(() => {\n    ctx.current.strokeStyle = props.color;\n  }, [props.color]);\n\n  React.useEffect(() => {\n    if (Number(props.lineWidth) > 0) {\n      canvas.current.className = \"\";\n      canvas.current.classList.add(\"pencil\");\n      ctx.current.lineWidth = props.lineWidth;\n    }\n  }, [props.lineWidth]);\n\n  React.useEffect(() => {\n    canvas.current.className = \"\";\n    isWriting = props.isText;\n\n    if (props.isSquare) {\n      canvas.current.classList.add(\"square\");\n    }\n\n    if (props.isText) {\n      canvas.current.classList.add(\"text\");\n    }\n\n    if (props.isPencil) {\n      canvas.current.classList.add(\"pencil\");\n    }\n  }, [props.isSquare, props.isPencil, props.isText]);\n\n  const handleTextClick = (e) => {\n    if (!isWriting) return;\n\n    write(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n  };\n\n  const write = (x, y) => {\n    const textarea = document.createElement(\"textarea\");\n\n    textarea.id = \"canvas-textarea\";\n    textarea.rows = 5;\n    textarea.cols = 30;\n    textarea.style.position = \"fixed\";\n    textarea.style.left = x - 4 + \"px\";\n    textarea.style.top = y - 4 + \"px\";\n\n    textarea.onblur = handleInputBlur;\n    textarea.onkeydown = handleKeyDown;\n    document.body.appendChild(textarea);\n    textarea.focus();\n    hasInput = true;\n  };\n\n  const handleKeyDown = (e) => {\n    const keyCode = e.keyCode;\n\n    if (keyCode === 9) {\n      e.target.value =\n        e.target.value.slice(0, e.target.selectionStart) +\n        \"  \" +\n        e.target.value.slice(e.target.selectionStart);\n\n      moveCaretToPosition(e.target, e.target.selectionStart);\n      return false;\n    }\n\n    if (keyCode === 57 && e.shiftKey) {\n      setTimeout(() => {\n        e.target.value =\n          e.target.value.slice(0, e.target.selectionStart) +\n          \")\" +\n          e.target.value.slice(e.target.selectionStart);\n        moveCaretToPosition(e.target, e.target.selectionStart + 1);\n      }, 0);\n    }\n\n    if (keyCode === 219 && e.shiftKey) {\n      setTimeout(() => {\n        e.target.value =\n          e.target.value.slice(0, e.target.selectionStart) +\n          \"}\" +\n          e.target.value.slice(e.target.selectionStart);\n        moveCaretToPosition(e.target, e.target.selectionStart + 1);\n      }, 0);\n    }\n  };\n\n  const handleRemoveInput = (e) => {\n    document.body.removeChild(e.target);\n    hasInput = false;\n  };\n\n  const handleInputBlur = (e) => {\n    const textArray = e.target.value.split(\"\\n\");\n    drawText(\n      textArray,\n      parseInt(e.target.style.left, 10),\n      parseInt(e.target.style.top, 10)\n    );\n    handleRemoveInput(e);\n  };\n\n  function drawText(txtArray, x, y) {\n    ctx.current.textBaseline = \"top\";\n    ctx.current.textAlign = \"left\";\n    ctx.current.fillStyle = props.color;\n    txtArray.forEach((txt, i) => ctx.current.fillText(txt, x, y + i * 16));\n  }\n\n  const draw = () => {\n    canvas.current.width = width;\n    canvas.current.height = height;\n    ctx.current = canvas.current.getContext(\"2d\");\n    ctx.current.lineJoin = \"round\";\n    ctx.current.lineCap = \"round\";\n    ctx.current.font = \"16px Arial\";\n    ctx.current.lineWidth = 20;\n  };\n\n  const handleMouseDown = (e) => {\n    isDrawing = true;\n    lastX.current = e.nativeEvent.offsetX;\n    lastY.current = e.nativeEvent.offsetY;\n  };\n\n  const handleMouseMove = (e) => {\n    if (isDrawing && !isWriting) {\n      //   ctx.current.strokeStyle = `hsl(${hue}, 100%, 50%)`;\n      ctx.current.beginPath();\n      ctx.current.moveTo(lastX.current, lastY.current);\n      ctx.current.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      ctx.current.stroke();\n      [lastX.current, lastY.current] = [\n        e.nativeEvent.offsetX,\n        e.nativeEvent.offsetY,\n      ];\n\n      hue++;\n      if (hue >= 360) {\n        hue = 0;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <canvas\n        ref={canvas}\n        id=\"paint\"\n        onMouseDown={handleMouseDown}\n        onTouchStart={handleMouseDown}\n        onMouseUp={() => (isDrawing = false)}\n        onTouchEnd={() => (isDrawing = false)}\n        onMouseOut={() => (isDrawing = false)}\n        onMouseMove={handleMouseMove}\n        onTouchMove={handleMouseMove}\n        onClick={handleTextClick}\n      />\n    </div>\n  );\n}\n\nexport default Paint;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InputLabel, Input } from \"@material-ui/core\";\nimport { ColorLens } from \"@material-ui/icons\";\nimport { debounce } from \"lodash\";\nimport \"./ColorPicker.css\";\n\nColorPicker.propTypes = {\n  onColorChange: PropTypes.func,\n};\n\nfunction ColorPicker(props) {\n  const colorPickerRef = React.useRef();\n  const colorHandler = React.useCallback(\n    debounce((color) => props.onColorChange(color), 300),\n    []\n  );\n\n  const handleColorChange = (e) => {\n    colorHandler(e.target.value);\n    colorPickerRef.current.style.color = e.target.value;\n  };\n\n  return (\n    <InputLabel className=\"color-label\">\n      <div className=\"color-icon\">\n        <ColorLens ref={colorPickerRef} />\n      </div>\n      <Input\n        type=\"color\"\n        className=\"color-input\"\n        onChange={handleColorChange}\n      />\n    </InputLabel>\n  );\n}\n\nexport default ColorPicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popper,\n  ClickAwayListener,\n  Fade,\n  Paper,\n  Input,\n} from \"@material-ui/core\";\nimport { LineWeight } from \"@material-ui/icons\";\nimport { debounce } from \"lodash\";\n\nconst LineWeightPicker = ({\n  isOpen,\n  anchorEl,\n  placement,\n  lineWidth,\n  onLineWidthChange,\n}) => {\n  const [open, setOpen] = React.useState(isOpen);\n  const lineWeightHandler = React.useCallback(\n    debounce((lineWidth) => onLineWidthChange(lineWidth), 300),\n    []\n  );\n\n  const handleLineWidthChange = (e) => {\n    lineWeightHandler(e.target.value);\n  };\n\n  React.useEffect(() => {\n    setOpen(isOpen);\n  }, [isOpen]);\n\n  return (\n    <>\n      <LineWeight />\n      <div>\n        <Popper\n          open={open}\n          anchorEl={anchorEl}\n          placement={placement}\n          transition\n          className=\"lineweight-input\"\n        >\n          {({ TransitionProps }) => (\n            <ClickAwayListener onClickAway={() => setOpen(false)}>\n              <Fade {...TransitionProps} timeout={350}>\n                <Paper className=\"lineweight-input-paper\" elevation={0}>\n                  <Input\n                    type=\"range\"\n                    disableUnderline\n                    onChange={handleLineWidthChange}\n                    defaultValue={lineWidth}\n                    inputProps={{\n                      min: 1,\n                    }}\n                  />\n                </Paper>\n              </Fade>\n            </ClickAwayListener>\n          )}\n        </Popper>\n      </div>\n    </>\n  );\n};\n\nLineWeightPicker.propTypes = {\n  isOpen: PropTypes.bool,\n  anchorEl: PropTypes.object,\n  placement: PropTypes.string,\n  lineWidth: PropTypes.string,\n  onLineWidthChange: PropTypes.func,\n};\n\nexport default LineWeightPicker;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { orange, deepPurple, deepOrange } from \"@material-ui/core/colors\";\n\nexport const getTheme = (theme) => {\n  const palletType = theme ? \"dark\" : \"light\";\n  const mainPrimaryColor = theme ? orange[500] : \"#ffff\";\n  const mainContrastText = theme ? \"#fff\" : \"rgba(0, 0, 0, 0.54)\";\n  const mainSecondaryColor = theme ? deepOrange[900] : deepPurple[500];\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor,\n        contrastText: mainContrastText,\n      },\n      secondary: {\n        main: mainSecondaryColor,\n        contrastText: \"#fff\",\n      },\n    },\n  });\n\n  return darkTheme;\n};\n","import React from \"react\";\nimport Paint from \"./components/Paint/Paint\";\nimport \"./App.css\";\nimport {\n  AppBar,\n  Switch,\n  Toolbar,\n  Typography,\n  ThemeProvider,\n  CssBaseline,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n} from \"@material-ui/core\";\nimport {\n  Create,\n  Brush,\n  Gesture,\n  CheckBoxOutlineBlank,\n  RadioButtonUnchecked,\n  WbSunny,\n  NightsStay,\n  Clear,\n  GetAppRounded,\n  TextFields,\n} from \"@material-ui/icons\";\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\nimport LineWeightPicker from \"./components/LineWeightPicker/LineWeightPicker\";\nimport { getTheme } from \"./theme/theme\";\n\nconst originalSelection = {\n  color: false,\n  pencil: false,\n  curve: false,\n  brush: false,\n  text: false,\n  lineWidth: false,\n  square: false,\n  circle: false,\n};\n\nfunction App() {\n  const [color, setColor] = React.useState(\"\");\n  const [lineWidth, setlineWidth] = React.useState(\"\");\n  const [theme, setTheme] = React.useState(false);\n  const [toggleClear, setToggleClear] = React.useState(false);\n  const [selection, setSelection] = React.useState(originalSelection);\n\n  // Line weight\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [placement, setPlacement] = React.useState();\n\n  // Square\n  const [isSquare, setIsSquare] = React.useState(false);\n\n  // Text\n  const [isText, setIsText] = React.useState(false);\n\n  // Pencil\n  const [isPencil, setIsPencil] = React.useState(false);\n\n  const handleThemeChange = () => {\n    setTheme(!theme);\n  };\n\n  const handleClearCanvas = () => {\n    setSelection({ ...originalSelection });\n    setlineWidth(\"\");\n    setToggleClear(!toggleClear);\n  };\n\n  const handleColorChange = (color) => {\n    setIsSquare(false);\n    setIsText(false);\n    setColor(color);\n  };\n\n  const handlePencilClick = () => {\n    setSelection({ ...originalSelection, pencil: true });\n    setIsSquare(false);\n    setIsText(false);\n    setIsPencil(true);\n    setlineWidth(\"1\");\n  };\n\n  const handleTextClick = () => {\n    setSelection({ ...originalSelection, text: true });\n    setIsPencil(false);\n    setIsSquare(false);\n    setIsText(true);\n  };\n\n  const handleLineWeightClick = (newPlacement) => (event) => {\n    setSelection({ ...originalSelection, lineWidth: true });\n    setAnchorEl(event.currentTarget);\n    setOpen((prev) => placement !== newPlacement || !prev);\n    setPlacement(newPlacement);\n  };\n\n  const handleSquareClick = () => {\n    setSelection({ ...originalSelection, square: true });\n    setIsPencil(false);\n    setIsText(false);\n    setIsSquare(true);\n  };\n\n  const handleColorClick = (e) => {\n    setSelection({ ...originalSelection, color: true });\n  };\n\n  return (\n    <ThemeProvider theme={getTheme(theme)}>\n      <CssBaseline />\n      <div className=\"App\">\n        <AppBar position=\"fixed\" color=\"primary\" elevation={0}>\n          <Toolbar className=\"app-header\">\n            <Typography variant=\"h6\">React Paint</Typography>\n            <IconButton>\n              <GetAppRounded />\n            </IconButton>\n            <div className=\"dark-mode-switch\">\n              <div>\n                <WbSunny />\n              </div>\n              <Switch\n                checked={theme}\n                onChange={handleThemeChange}\n                color=\"default\"\n              />\n              <div>\n                <NightsStay />\n              </div>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          PaperProps={{ className: \"app-drawer\" }}\n          color=\"primary\"\n        >\n          <List className=\"drawer-content\">\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.color ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={handleColorClick}\n              selected={selection.color}\n            >\n              <ColorPicker onColorChange={handleColorChange} />\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.pencil ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={handlePencilClick}\n              selected={selection.pencil}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Create />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.curve ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={() =>\n                setSelection({ ...originalSelection, curve: true })\n              }\n              selected={selection.curve}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Gesture />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.brush ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={() =>\n                setSelection({ ...originalSelection, brush: true })\n              }\n              selected={selection.brush}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Brush />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.text ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={handleTextClick}\n              selected={selection.text}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <TextFields />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.lineWidth\n                  ? theme\n                    ? \"selected-dark\"\n                    : \"selected\"\n                  : \"\"\n              }`}\n              onClick={handleLineWeightClick(\"right\")}\n              selected={selection.lineWidth}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <LineWeightPicker\n                  isOpen={open}\n                  lineWidth={lineWidth}\n                  anchorEl={anchorEl}\n                  placement={placement}\n                  onLineWidthChange={(value) => setlineWidth(value)}\n                />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.square ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={handleSquareClick}\n              selected={selection.square}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <CheckBoxOutlineBlank />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.circle ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={() =>\n                setSelection({ ...originalSelection, circle: true })\n              }\n              selected={selection.circle}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <RadioButtonUnchecked />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button`}\n              onClick={handleClearCanvas}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Clear />\n              </ListItemIcon>\n            </ListItem>\n          </List>\n        </Drawer>\n        <Paint\n          toggleClear={toggleClear}\n          color={color}\n          lineWidth={lineWidth}\n          isSquare={isSquare}\n          isText={isText}\n          isPencil={isPencil}\n          theme={theme}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}