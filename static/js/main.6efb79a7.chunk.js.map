{"version":3,"sources":["utils/utils.js","components/Canvas/Canvas.js","hooks/hooks.js","components/Paint/Paint.js","components/ColorPicker/ColorPicker.js","components/LineWeightPicker/LineWeightPicker.js","theme/theme.js","App.js","reportWebVitals.js","index.js"],"names":["moveCaretToPosition","el","position","setSelectionRange","Canvas","props","React","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","height","canvas","useRef","ctx","lastX","lastY","rect","hue","isDrawing","useEffect","draw","toggleClear","color","current","strokeStyle","canvasClass","className","Number","lineWidth","classList","add","getContext","lineJoin","lineCap","font","write","x","y","textarea","document","createElement","class","rows","cols","style","padding","left","top","onblur","handleInputBlur","onkeydown","handleKeyDown","body","appendChild","focus","e","keyCode","target","value","slice","selectionStart","shiftKey","setTimeout","txtArray","textArray","split","parseInt","textBaseline","textAlign","fillStyle","forEach","txt","i","fillText","removeChild","handleRemoveInput","handleMouseDown","isSquare","startX","nativeEvent","offsetX","startY","offsetY","handleMouseMove","w","h","clearRect","strokeRect","drawSquare","isText","beginPath","moveTo","lineTo","stroke","ref","id","onMouseDown","onTouchStart","onMouseUp","onDrawFinish","onTouchEnd","onMouseOut","onMouseMove","onTouchMove","onClick","Paint","canvasCount","setCanvasCount","setCanvasClass","isPencil","canvasArray","Array","fill","map","item","index","zIndex","ColorPicker","colorPickerRef","colorHandler","useCallback","debounce","onColorChange","InputLabel","ColorLens","Input","type","onChange","LineWeightPicker","isOpen","anchorEl","placement","onLineWidthChange","open","setOpen","lineWeightHandler","handleLineWidthChange","LineWeight","Popper","transition","TransitionProps","ClickAwayListener","onClickAway","Fade","timeout","Paper","elevation","disableUnderline","defaultValue","inputProps","min","max","getTheme","theme","palletType","mainPrimaryColor","orange","mainContrastText","mainSecondaryColor","deepOrange","deepPurple","createMuiTheme","palette","primary","main","contrastText","secondary","originalSelection","pencil","curve","brush","text","square","circle","App","newPlacement","setColor","setlineWidth","setTheme","setToggleClear","selection","setSelection","setAnchorEl","setPlacement","setIsSquare","setIsText","setIsPencil","ThemeProvider","CssBaseline","AppBar","Toolbar","Typography","variant","IconButton","GetAppRounded","WbSunny","Switch","checked","NightsStay","Drawer","PaperProps","List","ListItem","button","event","currentTarget","prev","selected","ListItemIcon","Create","Gesture","Brush","TextFields","CheckBoxOutlineBlank","RadioButtonUnchecked","Clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"0PAWaA,EAAsB,SAACC,EAAIC,GACtCD,EAAGE,kBAAkBD,EAAW,EAAGA,EAAW,ICNhD,IAuMeE,EAvMA,SAACC,GAAW,IAAD,ECJnB,WAA0B,IAAD,EACNC,IAAMC,SAAS,CAAC,EAAG,IADb,mBACvBC,EADuB,KACjBC,EADiB,KAU9B,OARAH,IAAMI,iBAAgB,WACpB,SAASC,IACPF,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,cAIrC,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIH,EDLiBS,GADA,mBACjBC,EADiB,KACVC,EADU,KAElBC,EAASd,IAAMe,SACfC,EAAMhB,IAAMe,SACZE,EAAQjB,IAAMe,OAAO,GACrBG,EAAQlB,IAAMe,OAAO,GACrBI,EAAOnB,IAAMe,OAAO,IAEtBK,EAAM,EACRC,GAAY,EAGdrB,IAAMsB,WAAU,WACdC,MACC,IAEHvB,IAAMsB,WAAU,WACdC,MACC,CAACX,EAAOC,EAAQd,EAAMyB,cAEzBxB,IAAMsB,WAAU,WACVvB,EAAM0B,QAAOT,EAAIU,QAAQC,YAAc5B,EAAM0B,OAE7C1B,EAAM6B,aAAed,EAAOY,UAC9BZ,EAAOY,QAAQG,UAAY9B,EAAM6B,eAClC,CAAC7B,EAAM0B,MAAO1B,EAAM6B,cAEvB5B,IAAMsB,WAAU,WACVQ,OAAO/B,EAAMgC,WAAa,IAC5Bf,EAAIU,QAAQK,UAAYhC,EAAMgC,aAE/B,CAAChC,EAAMgC,YAEV,IAAMR,EAAO,WACXT,EAAOY,QAAQd,MAAQA,EACvBE,EAAOY,QAAQb,OAASA,EACxBC,EAAOY,QAAQM,UAAUC,IAAMlC,EAAM6B,YACrCZ,EAAIU,QAAUZ,EAAOY,QAAQQ,WAAW,MACxClB,EAAIU,QAAQS,SAAW,QACvBnB,EAAIU,QAAQU,QAAU,QACtBpB,EAAIU,QAAQW,KAAO,aACnBrB,EAAIU,QAAQC,YAAc5B,EAAM0B,MAChCT,EAAIU,QAAQK,UAAYhC,EAAMgC,WAS1BO,EAAQ,SAACC,EAAGC,GAChB,IAAMC,EAAWC,SAASC,cAAc,YAExCF,EAASG,MAAQ,kBACjBH,EAASI,KAAO,EAChBJ,EAASK,KAAO,GAChBL,EAASM,MAAMnD,SAAW,QAC1B6C,EAASM,MAAMC,QAAU,OACzBP,EAASM,MAAME,KAAOV,EAAI,EAAI,KAC9BE,EAASM,MAAMG,IAAMV,EAAI,EAAI,KAE7BC,EAASU,OAASC,EAClBX,EAASY,UAAYC,EACrBZ,SAASa,KAAKC,YAAYf,GAC1BA,EAASgB,SACE,GAGPH,EAAgB,SAACI,GACrB,IAAMC,EAAUD,EAAEC,QAElB,GAAgB,IAAZA,EAOF,OANAD,EAAEE,OAAOC,MACPH,EAAEE,OAAOC,MAAMC,MAAM,EAAGJ,EAAEE,OAAOG,gBACjC,KACAL,EAAEE,OAAOC,MAAMC,MAAMJ,EAAEE,OAAOG,gBAEhCrE,EAAoBgE,EAAEE,OAAQF,EAAEE,OAAOG,iBAChC,EAGO,KAAZJ,GAAkBD,EAAEM,UACtBC,YAAW,WACTP,EAAEE,OAAOC,MACPH,EAAEE,OAAOC,MAAMC,MAAM,EAAGJ,EAAEE,OAAOG,gBACjC,IACAL,EAAEE,OAAOC,MAAMC,MAAMJ,EAAEE,OAAOG,gBAChCrE,EAAoBgE,EAAEE,OAAQF,EAAEE,OAAOG,eAAiB,KACvD,GAGW,MAAZJ,GAAmBD,EAAEM,UACvBC,YAAW,WACTP,EAAEE,OAAOC,MACPH,EAAEE,OAAOC,MAAMC,MAAM,EAAGJ,EAAEE,OAAOG,gBACjC,IACAL,EAAEE,OAAOC,MAAMC,MAAMJ,EAAEE,OAAOG,gBAChCrE,EAAoBgE,EAAEE,OAAQF,EAAEE,OAAOG,eAAiB,KACvD,IASDX,EAAkB,SAACM,GACvB,IASgBQ,EAAU3B,EAAGC,EATvB2B,EAAYT,EAAEE,OAAOC,MAAMO,MAAM,MASvBF,EAPdC,EAOwB5B,EANxB8B,SAASX,EAAEE,OAAOb,MAAME,KAAM,IAMHT,EAL3B6B,SAASX,EAAEE,OAAOb,MAAMG,IAAK,IAM/BlC,EAAIU,QAAQ4C,aAAe,MAC3BtD,EAAIU,QAAQ6C,UAAY,OACxBvD,EAAIU,QAAQ8C,UAAYzE,EAAM0B,MAC9ByC,EAASO,SAAQ,SAACC,EAAKC,GAAN,OAAY3D,EAAIU,QAAQkD,SAASF,EAAKnC,EAAGC,EAAQ,GAAJmC,MAnBtC,SAACjB,GACzBhB,SAASa,KAAKsB,YAAYnB,EAAEE,SACjB,EAUXkB,CAAkBpB,IAUpB,IAsBMqB,EAAkB,SAACrB,GACvBrC,GAAY,EAERtB,EAAMiF,UACR7D,EAAKO,QAAQuD,OAASvB,EAAEwB,YAAYC,QACpChE,EAAKO,QAAQ0D,OAAS1B,EAAEwB,YAAYG,UAEpCpE,EAAMS,QAAUgC,EAAEwB,YAAYC,QAC9BjE,EAAMQ,QAAUgC,EAAEwB,YAAYG,UAI5BC,EAAkB,SAAC5B,GACvB,GAAI3D,EAAMiF,UAAY3D,GAnCL,SAACqC,GAClBvC,EAAKO,QAAQ6D,EAAI7B,EAAEwB,YAAYC,QAAUhE,EAAKO,QAAQuD,OACtD9D,EAAKO,QAAQ8D,EAAI9B,EAAEwB,YAAYG,QAAUlE,EAAKO,QAAQ0D,OACtDpE,EAAIU,QAAQC,YAAc5B,EAAM0B,MAChCT,EAAIU,QAAQ+D,UAAU,EAAG,EAAG3E,EAAOY,QAAQd,MAAOE,EAAOY,QAAQb,QAEjEG,EAAIU,QAAQgE,WACVvE,EAAKO,QAAQuD,OACb9D,EAAKO,QAAQ0D,OACbjE,EAAKO,QAAQ6D,EACbpE,EAAKO,QAAQ8D,GA0BbG,CAAWjC,QACN,GAAIrC,IAActB,EAAM6F,OAAQ,CAErC5E,EAAIU,QAAQmE,YACZ7E,EAAIU,QAAQoE,OAAO7E,EAAMS,QAASR,EAAMQ,SACxCV,EAAIU,QAAQqE,OAAOrC,EAAEwB,YAAYC,QAASzB,EAAEwB,YAAYG,SACxDrE,EAAIU,QAAQsE,SALyB,MAMJ,CAC/BtC,EAAEwB,YAAYC,QACdzB,EAAEwB,YAAYG,SAFfpE,EAAMS,QAN8B,KAMrBR,EAAMQ,QANe,OAWrCN,GACW,MACTA,EAAM,KAKZ,OACE,wBACE6E,IAAKnF,EACLoF,GAAG,QACHC,YAAapB,EACbqB,aAAcrB,EACdsB,UA/CkB,WAChBtG,EAAMiF,UACRjF,EAAMuG,eAGRjF,GAAY,GA2CVkF,WAAY,kBAAOlF,GAAY,GAC/BmF,WAAY,kBAAOnF,GAAY,GAC/BoF,YAAanB,EACboB,YAAapB,EACbqB,QAlJoB,SAACjD,GAClB3D,EAAM6F,QAEXtD,EAAMoB,EAAEwB,YAAYC,QAASzB,EAAEwB,YAAYG,UAgJzCtC,MAAOhD,EAAMgD,SE3JJ6D,MAxCf,SAAe7G,GAAQ,IAAD,EACkBC,IAAMC,SAAS,GADjC,mBACb4G,EADa,KACAC,EADA,OAEkB9G,IAAMC,SAAS,UAFjC,mBAEb2B,EAFa,KAEAmF,EAFA,KAIpB/G,IAAMsB,WAAU,WACdwF,EAAeD,EAAc,GAEzB9G,EAAMiF,UACR+B,EAAe,UAGbhH,EAAM6F,QACRmB,EAAe,QAGbhH,EAAMiH,UACRD,EAAe,YAEhB,CAAChH,EAAMiF,SAAUjF,EAAMiH,SAAUjH,EAAM6F,SAE1C,IAAMqB,EAAc,IAAIC,MAAML,GAAaM,KAAK,GAEhD,OACE,qBAAKjB,GAAG,SAAR,SACGe,EAAYG,KAAI,SAACC,EAAMC,GAAP,OACf,cAAC,EAAD,CAEE7F,MAAO1B,EAAM0B,MACbM,UAAWhC,EAAMgC,UACjBgB,MAAO,CAAEwE,OAAQD,GACjBtC,SAAUjF,EAAMiF,SAChBY,OAAQ7F,EAAM6F,OACdhE,YAAaA,EACb0E,aAAc,kBAAMQ,EAAeD,EAAc,KAP5CS,S,8OCQAE,MA1Bf,SAAqBzH,GACnB,IAAM0H,EAAiBzH,IAAMe,SACvB2G,EAAe1H,IAAM2H,YACzBC,oBAAS,SAACnG,GAAD,OAAW1B,EAAM8H,cAAcpG,KAAQ,KAChD,IAQF,OACE,eAACqG,EAAA,EAAD,CAAYjG,UAAU,cAAtB,UACE,qBAAKA,UAAU,aAAf,SACE,cAACkG,EAAA,EAAD,CAAW9B,IAAKwB,MAElB,cAACO,EAAA,EAAD,CACEC,KAAK,QACLpG,UAAU,cACVqG,SAboB,SAACxE,GACzBgE,EAAahE,EAAEE,OAAOC,OACtB4D,EAAe/F,QAAQqB,MAAMtB,MAAQiC,EAAEE,OAAOC,a,4CCwDnCsE,EAhEU,SAAC,GAMnB,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,UACAvG,EAEI,EAFJA,UACAwG,EACI,EADJA,kBACI,EACoBvI,IAAMC,SAASmI,GADnC,mBACGI,EADH,KACSC,EADT,KAEEC,EAAoB1I,IAAM2H,YAC9BC,oBAAS,SAAC7F,GAAD,OAAewG,EAAkBxG,KAAY,KACtD,IAGI4G,EAAwB,SAACjF,GAC7BgF,EAAkBhF,EAAEE,OAAOC,QAO7B,OAJA7D,IAAMsB,WAAU,WACdmH,EAAQL,KACP,CAACA,IAGF,qCACE,cAACQ,EAAA,EAAD,IACA,8BACE,cAACC,EAAA,EAAD,CACEL,KAAMA,EACNH,SAAUA,EACVC,UAAWA,EACXQ,YAAU,EACVjH,UAAU,mBALZ,SAOG,gBAAGkH,EAAH,EAAGA,gBAAH,OACC,cAACC,EAAA,EAAD,CAAmBC,YAAa,kBAAMR,GAAQ,IAA9C,SACE,cAACS,EAAA,EAAD,2BAAUH,GAAV,IAA2BI,QAAS,IAApC,SACE,cAACC,EAAA,EAAD,CAAOvH,UAAU,yBAAyBwH,UAAW,EAArD,SACE,cAACrB,EAAA,EAAD,CACEC,KAAK,QACLqB,kBAAgB,EAChBpB,SAAUS,EACVY,aAAcxH,EACdyH,WAAY,CACVC,IAAK,EACLC,IAAK,sB,kCCpDdC,EAAW,SAACC,GACvB,IAAMC,EAAaD,EAAQ,OAAS,QAC9BE,EAAmBF,EAAQG,IAAO,KAAO,QACzCC,EAAmBJ,EAAQ,OAAS,sBACpCK,EAAqBL,EAAQM,IAAW,KAAOC,IAAW,KAgBhE,OAdkBC,YAAe,CAC/BC,QAAS,CACPpC,KAAM4B,EACNS,QAAS,CACPC,KAAMT,EACNU,aAAcR,GAEhBS,UAAW,CACTF,KAAMN,EACNO,aAAc,YCchBE,EAAoB,CACxBjJ,OAAO,EACPkJ,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,QAAQ,EACRC,QAAQ,GAsOKC,MAnOf,WAAgB,IAuDiBC,EAvDlB,EACalL,IAAMC,SAAS,IAD5B,mBACNwB,EADM,KACC0J,EADD,OAEqBnL,IAAMC,SAAS,IAFpC,mBAEN8B,EAFM,KAEKqJ,EAFL,OAGapL,IAAMC,UAAS,GAH5B,mBAGN2J,EAHM,KAGCyB,EAHD,OAIyBrL,IAAMC,UAAS,GAJxC,mBAINuB,EAJM,KAIO8J,EAJP,OAKqBtL,IAAMC,SAAN,2BAC7ByK,GAD6B,IAEhCC,QAAQ,KAPG,mBAKNY,EALM,KAKKC,EALL,OAWmBxL,IAAMC,SAAS,MAXlC,mBAWNoI,EAXM,KAWIoD,GAXJ,QAYWzL,IAAMC,UAAS,GAZ1B,qBAYNuI,GAZM,MAYAC,GAZA,SAaqBzI,IAAMC,WAb3B,qBAaNqI,GAbM,MAaKoD,GAbL,SAgBmB1L,IAAMC,UAAS,GAhBlC,qBAgBI0L,IAhBJ,gBAmBe3L,IAAMC,UAAS,GAnB9B,qBAmBE2L,IAnBF,gBAsBmB5L,IAAMC,UAAS,GAtBlC,qBAsBI4L,IAtBJ,aAoEb,OACE,eAACC,EAAA,EAAD,CAAelC,MAAOD,EAASC,GAA/B,UACE,cAACmC,EAAA,EAAD,IACA,sBAAKlK,UAAU,MAAf,UACE,cAACmK,EAAA,EAAD,CAAQpM,SAAS,QAAQ6B,MAAM,UAAU4H,UAAW,EAApD,SACE,eAAC4C,EAAA,EAAD,CAASpK,UAAU,aAAnB,UACE,cAACqK,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBACA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,sBAAKxK,UAAU,mBAAf,UACE,8BACE,cAACyK,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CACEC,QAAS5C,EACT1B,SA5DY,WACxBmD,GAAUzB,IA4DEnI,MAAM,YAER,8BACE,cAACgL,EAAA,EAAD,cAKR,cAACC,EAAA,EAAD,CACEP,QAAQ,YACRQ,WAAY,CAAE9K,UAAW,cACzBJ,MAAM,UAHR,SAKE,eAACmL,EAAA,EAAD,CAAM/K,UAAU,iBAAhB,UACE,cAACgL,EAAA,EAAD,CAAUC,QAAM,EAACjL,UAAS,wBAA1B,SACE,cAAC,EAAD,CAAagG,cAlEC,SAACpG,GACzBkK,IAAY,GACZC,IAAU,GACVT,EAAS1J,QAiED,cAACoL,EAAA,EAAD,CACEC,QAAM,EACNjL,UAAS,gCACP0J,EAAUxJ,UACN6H,EACE,gBACA,WACF,IAENjD,SAxDmBuE,EAwDY,QAxDK,SAAC6B,GAC/CtB,GAAYsB,EAAMC,eAClBvE,IAAQ,SAACwE,GAAD,OAAU3E,KAAc4C,IAAiB+B,KACjDvB,GAAaR,KAsDHgC,SAAU3B,EAAUxJ,UAVtB,SAYE,cAACoL,EAAA,EAAD,CAActL,UAAU,cAAxB,SACE,cAAC,EAAD,CACEuG,OAAQI,GACRzG,UAAWA,EACXsG,SAAUA,EACVC,UAAWA,GACXC,kBAAmB,SAAC1E,GAAD,OAAWuH,EAAavH,UAIjD,cAACgJ,EAAA,EAAD,CACEC,QAAM,EACNjL,UAAS,gCACP0J,EAAUZ,OAAUf,EAAQ,gBAAkB,WAAc,IAE9DjD,QAzFc,WACxB6E,EAAa,2BAAKd,GAAN,IAAyBC,QAAQ,KAC7CgB,IAAY,GACZC,IAAU,GACVC,IAAY,GACZT,EAAa,MAqFH8B,SAAU3B,EAAUZ,OANtB,SAQE,cAACwC,EAAA,EAAD,CAActL,UAAU,cAAxB,SACE,cAACuL,EAAA,EAAD,QAGJ,cAACP,EAAA,EAAD,CACEC,QAAM,EACNjL,UAAS,gCACP0J,EAAUX,MAAShB,EAAQ,gBAAkB,WAAc,IAE7DjD,QAAS,kBACP6E,EAAa,2BAAKd,GAAN,IAAyBE,OAAO,MAE9CsC,SAAU3B,EAAUX,MARtB,SAUE,cAACuC,EAAA,EAAD,CAActL,UAAU,cAAxB,SACE,cAACwL,EAAA,EAAD,QAGJ,cAACR,EAAA,EAAD,CACEC,QAAM,EACNjL,UAAS,gCACP0J,EAAUV,MAASjB,EAAQ,gBAAkB,WAAc,IAE7DjD,QAAS,kBACP6E,EAAa,2BAAKd,GAAN,IAAyBG,OAAO,MAE9CqC,SAAU3B,EAAUV,MARtB,SAUE,cAACsC,EAAA,EAAD,CAActL,UAAU,cAAxB,SACE,cAACyL,EAAA,EAAD,QAGJ,cAACT,EAAA,EAAD,CACEC,QAAM,EACNjL,UAAS,gCACP0J,EAAUT,KAAQlB,EAAQ,gBAAkB,WAAc,IAE5DjD,QAzHY,WACtB6E,EAAa,2BAAKd,GAAN,IAAyBI,MAAM,KAC3Ce,IAAY,GACZF,IAAY,GACZC,IAAU,IAsHAsB,SAAU3B,EAAUT,KANtB,SAQE,cAACqC,EAAA,EAAD,CAActL,UAAU,cAAxB,SACE,cAAC0L,EAAA,EAAD,QAGJ,cAACV,EAAA,EAAD,CACEC,QAAM,EACNjL,UAAS,gCACP0J,EAAUR,OAAUnB,EAAQ,gBAAkB,WAAc,IAE9DjD,QAxHc,WACxB6E,EAAa,2BAAKd,GAAN,IAAyBK,QAAQ,KAC7Cc,IAAY,GACZD,IAAU,GACVD,IAAY,IAqHFuB,SAAU3B,EAAUR,OANtB,SAQE,cAACoC,EAAA,EAAD,CAActL,UAAU,cAAxB,SACE,cAAC2L,EAAA,EAAD,QAGJ,cAACX,EAAA,EAAD,CACEC,QAAM,EACNjL,UAAS,gCACP0J,EAAUP,OAAUpB,EAAQ,gBAAkB,WAAc,IAE9DjD,QAAS,kBACP6E,EAAa,2BAAKd,GAAN,IAAyBM,QAAQ,MAE/CkC,SAAU3B,EAAUP,OARtB,SAUE,cAACmC,EAAA,EAAD,CAActL,UAAU,cAAxB,SACE,cAAC4L,EAAA,EAAD,QAGJ,cAACZ,EAAA,EAAD,CACEC,QAAM,EACNjL,UAAS,wBACT8E,QAjLc,WACxB6E,EAAa,eAAKd,IAClBU,EAAa,IACbE,GAAgB9J,IA2KR,SAKE,cAAC2L,EAAA,EAAD,CAActL,UAAU,cAAxB,SACE,cAAC6L,EAAA,EAAD,aAKR,cAAC,EAAD,CACElM,YAAaA,EACbC,MAAOA,EACPM,UAAWA,EACXiD,SAAUuG,EAAUR,OACpBnF,OAAQ2F,EAAUT,KAClB9D,SAAUuE,EAAUZ,OACpBf,MAAOA,WC1PF+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAAS3L,SAAS4L,eAAe,SAKjDX,M","file":"static/js/main.6efb79a7.chunk.js","sourcesContent":["export const moveCaretToEnd = (el) => {\n  if (typeof el.selectionStart == \"number\") {\n    el.selectionStart = el.selectionEnd = el.value.length - 1;\n  } else if (typeof el.createTextRange != \"undefined\") {\n    el.focus();\n    var range = el.createTextRange();\n    range.collapse(false);\n    range.select();\n  }\n};\n\nexport const moveCaretToPosition = (el, position) => {\n  el.setSelectionRange(position - 2, position - 2);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { moveCaretToPosition } from \"../../utils/utils\";\n\nimport { useWindowSize } from \"../../hooks/hooks\";\n\nconst Canvas = (props) => {\n  const [width, height] = useWindowSize();\n  const canvas = React.useRef();\n  const ctx = React.useRef();\n  const lastX = React.useRef(0);\n  const lastY = React.useRef(0);\n  const rect = React.useRef({});\n\n  let hue = 0,\n    isDrawing = false,\n    hasInput = false;\n\n  React.useEffect(() => {\n    draw();\n  }, []);\n\n  React.useEffect(() => {\n    draw();\n  }, [width, height, props.toggleClear]);\n\n  React.useEffect(() => {\n    if (props.color) ctx.current.strokeStyle = props.color;\n\n    if (props.canvasClass && canvas.current)\n      canvas.current.className = props.canvasClass;\n  }, [props.color, props.canvasClass]);\n\n  React.useEffect(() => {\n    if (Number(props.lineWidth) > 0) {\n      ctx.current.lineWidth = props.lineWidth;\n    }\n  }, [props.lineWidth]);\n\n  const draw = () => {\n    canvas.current.width = width;\n    canvas.current.height = height;\n    canvas.current.classList.add = props.canvasClass;\n    ctx.current = canvas.current.getContext(\"2d\");\n    ctx.current.lineJoin = \"round\";\n    ctx.current.lineCap = \"round\";\n    ctx.current.font = \"16px Arial\";\n    ctx.current.strokeStyle = props.color;\n    ctx.current.lineWidth = props.lineWidth;\n  };\n\n  const handleTextClick = (e) => {\n    if (!props.isText) return;\n\n    write(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n  };\n\n  const write = (x, y) => {\n    const textarea = document.createElement(\"textarea\");\n\n    textarea.class = \"canvas-textarea\";\n    textarea.rows = 1;\n    textarea.cols = 20;\n    textarea.style.position = \"fixed\";\n    textarea.style.padding = \"10px\";\n    textarea.style.left = x - 4 + \"px\";\n    textarea.style.top = y - 4 + \"px\";\n\n    textarea.onblur = handleInputBlur;\n    textarea.onkeydown = handleKeyDown;\n    document.body.appendChild(textarea);\n    textarea.focus();\n    hasInput = true;\n  };\n\n  const handleKeyDown = (e) => {\n    const keyCode = e.keyCode;\n\n    if (keyCode === 9) {\n      e.target.value =\n        e.target.value.slice(0, e.target.selectionStart) +\n        \"  \" +\n        e.target.value.slice(e.target.selectionStart);\n\n      moveCaretToPosition(e.target, e.target.selectionStart);\n      return false;\n    }\n\n    if (keyCode === 57 && e.shiftKey) {\n      setTimeout(() => {\n        e.target.value =\n          e.target.value.slice(0, e.target.selectionStart) +\n          \")\" +\n          e.target.value.slice(e.target.selectionStart);\n        moveCaretToPosition(e.target, e.target.selectionStart + 1);\n      }, 0);\n    }\n\n    if (keyCode === 219 && e.shiftKey) {\n      setTimeout(() => {\n        e.target.value =\n          e.target.value.slice(0, e.target.selectionStart) +\n          \"}\" +\n          e.target.value.slice(e.target.selectionStart);\n        moveCaretToPosition(e.target, e.target.selectionStart + 1);\n      }, 0);\n    }\n  };\n\n  const handleRemoveInput = (e) => {\n    document.body.removeChild(e.target);\n    hasInput = false;\n  };\n\n  const handleInputBlur = (e) => {\n    const textArray = e.target.value.split(\"\\n\");\n    drawText(\n      textArray,\n      parseInt(e.target.style.left, 10),\n      parseInt(e.target.style.top, 10)\n    );\n    handleRemoveInput(e);\n  };\n\n  function drawText(txtArray, x, y) {\n    ctx.current.textBaseline = \"top\";\n    ctx.current.textAlign = \"left\";\n    ctx.current.fillStyle = props.color;\n    txtArray.forEach((txt, i) => ctx.current.fillText(txt, x, y + i * 16));\n  }\n\n  const drawSquare = (e) => {\n    rect.current.w = e.nativeEvent.offsetX - rect.current.startX;\n    rect.current.h = e.nativeEvent.offsetY - rect.current.startY;\n    ctx.current.strokeStyle = props.color;\n    ctx.current.clearRect(0, 0, canvas.current.width, canvas.current.height);\n\n    ctx.current.strokeRect(\n      rect.current.startX,\n      rect.current.startY,\n      rect.current.w,\n      rect.current.h\n    );\n  };\n\n  const handleMouseUp = () => {\n    if (props.isSquare) {\n      props.onDrawFinish();\n    }\n\n    isDrawing = false;\n  };\n\n  const handleMouseDown = (e) => {\n    isDrawing = true;\n\n    if (props.isSquare) {\n      rect.current.startX = e.nativeEvent.offsetX;\n      rect.current.startY = e.nativeEvent.offsetY;\n    } else {\n      lastX.current = e.nativeEvent.offsetX;\n      lastY.current = e.nativeEvent.offsetY;\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (props.isSquare && isDrawing) {\n      drawSquare(e);\n    } else if (isDrawing && !props.isText) {\n      //   ctx.current.strokeStyle = `hsl(${hue}, 100%, 50%)`;\n      ctx.current.beginPath();\n      ctx.current.moveTo(lastX.current, lastY.current);\n      ctx.current.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      ctx.current.stroke();\n      [lastX.current, lastY.current] = [\n        e.nativeEvent.offsetX,\n        e.nativeEvent.offsetY,\n      ];\n\n      hue++;\n      if (hue >= 360) {\n        hue = 0;\n      }\n    }\n  };\n\n  return (\n    <canvas\n      ref={canvas}\n      id=\"paint\"\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onTouchEnd={() => (isDrawing = false)}\n      onMouseOut={() => (isDrawing = false)}\n      onMouseMove={handleMouseMove}\n      onTouchMove={handleMouseMove}\n      onClick={handleTextClick}\n      style={props.style}\n    />\n  );\n};\n\nCanvas.propTypes = {};\n\nexport default Canvas;\n","import React from \"react\";\n\nexport function useWindowSize() {\n  const [size, setSize] = React.useState([0, 0]);\n  React.useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n","import React from \"react\";\nimport Canvas from \"../../components/Canvas/Canvas\";\n\nfunction Paint(props) {\n  const [canvasCount, setCanvasCount] = React.useState(0);\n  const [canvasClass, setCanvasClass] = React.useState(\"pencil\");\n\n  React.useEffect(() => {\n    setCanvasCount(canvasCount + 1);\n\n    if (props.isSquare) {\n      setCanvasClass(\"square\");\n    }\n\n    if (props.isText) {\n      setCanvasClass(\"text\");\n    }\n\n    if (props.isPencil) {\n      setCanvasClass(\"pencil\");\n    }\n  }, [props.isSquare, props.isPencil, props.isText]);\n\n  const canvasArray = new Array(canvasCount).fill(0);\n\n  return (\n    <div id=\"canvas\">\n      {canvasArray.map((item, index) => (\n        <Canvas\n          key={index}\n          color={props.color}\n          lineWidth={props.lineWidth}\n          style={{ zIndex: index }}\n          isSquare={props.isSquare}\n          isText={props.isText}\n          canvasClass={canvasClass}\n          onDrawFinish={() => setCanvasCount(canvasCount + 1)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Paint;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InputLabel, Input } from \"@material-ui/core\";\nimport { ColorLens } from \"@material-ui/icons\";\nimport { debounce } from \"lodash\";\nimport \"./ColorPicker.css\";\n\nColorPicker.propTypes = {\n  onColorChange: PropTypes.func,\n};\n\nfunction ColorPicker(props) {\n  const colorPickerRef = React.useRef();\n  const colorHandler = React.useCallback(\n    debounce((color) => props.onColorChange(color), 300),\n    []\n  );\n\n  const handleColorChange = (e) => {\n    colorHandler(e.target.value);\n    colorPickerRef.current.style.color = e.target.value;\n  };\n\n  return (\n    <InputLabel className=\"color-label\">\n      <div className=\"color-icon\">\n        <ColorLens ref={colorPickerRef} />\n      </div>\n      <Input\n        type=\"color\"\n        className=\"color-input\"\n        onChange={handleColorChange}\n      />\n    </InputLabel>\n  );\n}\n\nexport default ColorPicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popper,\n  ClickAwayListener,\n  Fade,\n  Paper,\n  Input,\n} from \"@material-ui/core\";\nimport { LineWeight } from \"@material-ui/icons\";\nimport { debounce } from \"lodash\";\n\nconst LineWeightPicker = ({\n  isOpen,\n  anchorEl,\n  placement,\n  lineWidth,\n  onLineWidthChange,\n}) => {\n  const [open, setOpen] = React.useState(isOpen);\n  const lineWeightHandler = React.useCallback(\n    debounce((lineWidth) => onLineWidthChange(lineWidth), 300),\n    []\n  );\n\n  const handleLineWidthChange = (e) => {\n    lineWeightHandler(e.target.value);\n  };\n\n  React.useEffect(() => {\n    setOpen(isOpen);\n  }, [isOpen]);\n\n  return (\n    <>\n      <LineWeight />\n      <div>\n        <Popper\n          open={open}\n          anchorEl={anchorEl}\n          placement={placement}\n          transition\n          className=\"lineweight-input\"\n        >\n          {({ TransitionProps }) => (\n            <ClickAwayListener onClickAway={() => setOpen(false)}>\n              <Fade {...TransitionProps} timeout={350}>\n                <Paper className=\"lineweight-input-paper\" elevation={0}>\n                  <Input\n                    type=\"range\"\n                    disableUnderline\n                    onChange={handleLineWidthChange}\n                    defaultValue={lineWidth}\n                    inputProps={{\n                      min: 1,\n                      max: 20,\n                    }}\n                  />\n                </Paper>\n              </Fade>\n            </ClickAwayListener>\n          )}\n        </Popper>\n      </div>\n    </>\n  );\n};\n\nLineWeightPicker.propTypes = {\n  isOpen: PropTypes.bool,\n  anchorEl: PropTypes.object,\n  placement: PropTypes.string,\n  lineWidth: PropTypes.string,\n  onLineWidthChange: PropTypes.func,\n};\n\nexport default LineWeightPicker;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { orange, deepPurple, deepOrange } from \"@material-ui/core/colors\";\n\nexport const getTheme = (theme) => {\n  const palletType = theme ? \"dark\" : \"light\";\n  const mainPrimaryColor = theme ? orange[500] : \"#ffff\";\n  const mainContrastText = theme ? \"#fff\" : \"rgba(0, 0, 0, 0.54)\";\n  const mainSecondaryColor = theme ? deepOrange[900] : deepPurple[500];\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor,\n        contrastText: mainContrastText,\n      },\n      secondary: {\n        main: mainSecondaryColor,\n        contrastText: \"#fff\",\n      },\n    },\n  });\n\n  return darkTheme;\n};\n","import React from \"react\";\nimport Paint from \"./components/Paint/Paint\";\nimport \"./App.css\";\nimport {\n  AppBar,\n  Switch,\n  Toolbar,\n  Typography,\n  ThemeProvider,\n  CssBaseline,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n} from \"@material-ui/core\";\nimport {\n  Create,\n  Brush,\n  Gesture,\n  CheckBoxOutlineBlank,\n  RadioButtonUnchecked,\n  WbSunny,\n  NightsStay,\n  Clear,\n  GetAppRounded,\n  TextFields,\n} from \"@material-ui/icons\";\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\nimport LineWeightPicker from \"./components/LineWeightPicker/LineWeightPicker\";\nimport { getTheme } from \"./theme/theme\";\n\nconst originalSelection = {\n  color: false,\n  pencil: false,\n  curve: false,\n  brush: false,\n  text: false,\n  square: false,\n  circle: false,\n};\n\nfunction App() {\n  const [color, setColor] = React.useState(\"\");\n  const [lineWidth, setlineWidth] = React.useState(\"\");\n  const [theme, setTheme] = React.useState(false);\n  const [toggleClear, setToggleClear] = React.useState(false);\n  const [selection, setSelection] = React.useState({\n    ...originalSelection,\n    pencil: true,\n  });\n\n  // Line weight\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [placement, setPlacement] = React.useState();\n\n  // Square\n  const [isSquare, setIsSquare] = React.useState(false);\n\n  // Text\n  const [isText, setIsText] = React.useState(false);\n\n  // Pencil\n  const [isPencil, setIsPencil] = React.useState(false);\n\n  const handleThemeChange = () => {\n    setTheme(!theme);\n  };\n\n  const handleClearCanvas = () => {\n    setSelection({ ...originalSelection });\n    setlineWidth(\"\");\n    setToggleClear(!toggleClear);\n  };\n\n  const handleColorChange = (color) => {\n    setIsSquare(false);\n    setIsText(false);\n    setColor(color);\n  };\n\n  const handlePencilClick = () => {\n    setSelection({ ...originalSelection, pencil: true });\n    setIsSquare(false);\n    setIsText(false);\n    setIsPencil(true);\n    setlineWidth(\"1\");\n  };\n\n  const handleTextClick = () => {\n    setSelection({ ...originalSelection, text: true });\n    setIsPencil(false);\n    setIsSquare(false);\n    setIsText(true);\n  };\n\n  const handleLineWeightClick = (newPlacement) => (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen((prev) => placement !== newPlacement || !prev);\n    setPlacement(newPlacement);\n  };\n\n  const handleSquareClick = () => {\n    setSelection({ ...originalSelection, square: true });\n    setIsPencil(false);\n    setIsText(false);\n    setIsSquare(true);\n  };\n\n  return (\n    <ThemeProvider theme={getTheme(theme)}>\n      <CssBaseline />\n      <div className=\"App\">\n        <AppBar position=\"fixed\" color=\"primary\" elevation={0}>\n          <Toolbar className=\"app-header\">\n            <Typography variant=\"h6\">React Paint</Typography>\n            <IconButton>\n              <GetAppRounded />\n            </IconButton>\n            <div className=\"dark-mode-switch\">\n              <div>\n                <WbSunny />\n              </div>\n              <Switch\n                checked={theme}\n                onChange={handleThemeChange}\n                color=\"default\"\n              />\n              <div>\n                <NightsStay />\n              </div>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          PaperProps={{ className: \"app-drawer\" }}\n          color=\"primary\"\n        >\n          <List className=\"drawer-content\">\n            <ListItem button className={`drawer-content-button`}>\n              <ColorPicker onColorChange={handleColorChange} />\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.lineWidth\n                  ? theme\n                    ? \"selected-dark\"\n                    : \"selected\"\n                  : \"\"\n              }`}\n              onClick={handleLineWeightClick(\"right\")}\n              selected={selection.lineWidth}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <LineWeightPicker\n                  isOpen={open}\n                  lineWidth={lineWidth}\n                  anchorEl={anchorEl}\n                  placement={placement}\n                  onLineWidthChange={(value) => setlineWidth(value)}\n                />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.pencil ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={handlePencilClick}\n              selected={selection.pencil}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Create />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.curve ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={() =>\n                setSelection({ ...originalSelection, curve: true })\n              }\n              selected={selection.curve}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Gesture />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.brush ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={() =>\n                setSelection({ ...originalSelection, brush: true })\n              }\n              selected={selection.brush}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Brush />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.text ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={handleTextClick}\n              selected={selection.text}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <TextFields />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.square ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={handleSquareClick}\n              selected={selection.square}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <CheckBoxOutlineBlank />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button ${\n                selection.circle ? (theme ? \"selected-dark\" : \"selected\") : \"\"\n              }`}\n              onClick={() =>\n                setSelection({ ...originalSelection, circle: true })\n              }\n              selected={selection.circle}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <RadioButtonUnchecked />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className={`drawer-content-button`}\n              onClick={handleClearCanvas}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Clear />\n              </ListItemIcon>\n            </ListItem>\n          </List>\n        </Drawer>\n        <Paint\n          toggleClear={toggleClear}\n          color={color}\n          lineWidth={lineWidth}\n          isSquare={selection.square}\n          isText={selection.text}\n          isPencil={selection.pencil}\n          theme={theme}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}