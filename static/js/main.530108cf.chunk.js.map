{"version":3,"sources":["components/Paint/Paint.js","components/ColorPicker/ColorPicker.js","components/LineWeightPicker/LineWeightPicker.js","App.js","reportWebVitals.js","index.js"],"names":["Paint","props","React","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","height","canvas","useRef","ctx","lastX","lastY","hue","isDrawing","useEffect","draw","current","className","toggleClear","strokeStyle","color","lineWidth","classList","add","getContext","lineJoin","lineCap","handleMouseDown","e","nativeEvent","offsetX","offsetY","handleMouseMove","beginPath","moveTo","lineTo","stroke","ref","id","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseOut","onMouseMove","onTouchMove","ColorPicker","colorPickerRef","colorHandler","useCallback","debounce","onColorChange","InputLabel","ColorLens","Input","type","onChange","target","value","style","LineWeightPicker","isOpen","anchorEl","placement","onLineWidthChange","open","setOpen","lineWeightHandler","handleLineWidthChange","LineWeight","Popper","transition","TransitionProps","ClickAwayListener","onClickAway","Fade","timeout","Paper","elevation","disableUnderline","defaultValue","inputProps","min","themeObject","palette","light","dark","App","createMuiTheme","newPlacement","setColor","setlineWidth","theme","setTheme","setToggleClear","appliedTheme","setAnchorEl","setPlacement","handlePencilClick","ThemeProvider","CssBaseline","AppBar","position","Toolbar","Typography","variant","IconButton","GetAppRounded","WbSunny","Switch","checked","NightsStay","Drawer","PaperProps","List","ListItem","button","onClick","ListItemIcon","Create","Gesture","Brush","event","currentTarget","prev","CheckBoxOutlineBlank","RadioButtonUnchecked","Clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.530108cf.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction useWindowSize() {\n  const [size, setSize] = React.useState([0, 0]);\n  React.useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n\nfunction Paint(props) {\n  const [width, height] = useWindowSize();\n  const canvas = React.useRef();\n  const ctx = React.useRef();\n  const lastX = React.useRef(0);\n  const lastY = React.useRef(0);\n  let hue = 0,\n    isDrawing = false;\n\n  React.useEffect(() => {\n    draw();\n  }, []);\n\n  React.useEffect(() => {\n    canvas.current.className = \"\";\n    draw();\n  }, [width, height, props.toggleClear]);\n\n  React.useEffect(() => {\n    ctx.current.strokeStyle = props.color;\n  }, [props.color]);\n\n  React.useEffect(() => {\n    if (props.lineWidth > 0) {\n      canvas.current.classList.add(\"pencil\");\n      ctx.current.lineWidth = props.lineWidth;\n    }\n  }, [props.lineWidth]);\n\n  const draw = () => {\n    canvas.current.width = width;\n    canvas.current.height = height;\n    ctx.current = canvas.current.getContext(\"2d\");\n    ctx.current.lineJoin = \"round\";\n    ctx.current.lineCap = \"round\";\n    ctx.current.lineWidth = 20;\n  };\n\n  const handleMouseDown = (e) => {\n    isDrawing = true;\n    lastX.current = e.nativeEvent.offsetX;\n    lastY.current = e.nativeEvent.offsetY;\n  };\n\n  const handleMouseMove = (e) => {\n    if (isDrawing) {\n      //   ctx.current.strokeStyle = `hsl(${hue}, 100%, 50%)`;\n      ctx.current.beginPath();\n      ctx.current.moveTo(lastX.current, lastY.current);\n      ctx.current.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      ctx.current.stroke();\n      [lastX.current, lastY.current] = [\n        e.nativeEvent.offsetX,\n        e.nativeEvent.offsetY,\n      ];\n\n      hue++;\n      if (hue >= 360) {\n        hue = 0;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <canvas\n        ref={canvas}\n        id=\"paint\"\n        onMouseDown={handleMouseDown}\n        onTouchStart={handleMouseDown}\n        onMouseUp={() => (isDrawing = false)}\n        onTouchEnd={() => (isDrawing = false)}\n        onMouseOut={() => (isDrawing = false)}\n        onMouseMove={handleMouseMove}\n        onTouchMove={handleMouseMove}\n      />\n    </div>\n  );\n}\n\nexport default Paint;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InputLabel, Input } from \"@material-ui/core\";\nimport { ColorLens } from \"@material-ui/icons\";\nimport { debounce } from \"lodash\";\nimport \"./ColorPicker.css\";\n\nColorPicker.propTypes = {\n  onColorChange: PropTypes.func,\n};\n\nfunction ColorPicker(props) {\n  const colorPickerRef = React.useRef();\n  const colorHandler = React.useCallback(\n    debounce((color) => props.onColorChange(color), 300),\n    []\n  );\n\n  const handleColorChange = (e) => {\n    colorHandler(e.target.value);\n    colorPickerRef.current.style.color = e.target.value;\n  };\n\n  return (\n    <InputLabel className=\"color-label\">\n      <div className=\"color-icon\">\n        <ColorLens ref={colorPickerRef} />\n      </div>\n      <Input\n        type=\"color\"\n        className=\"color-input\"\n        onChange={handleColorChange}\n      />\n    </InputLabel>\n  );\n}\n\nexport default ColorPicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popper,\n  ClickAwayListener,\n  Fade,\n  Paper,\n  Input,\n} from \"@material-ui/core\";\nimport { LineWeight } from \"@material-ui/icons\";\nimport { debounce } from \"lodash\";\n\nconst LineWeightPicker = ({\n  isOpen,\n  anchorEl,\n  placement,\n  lineWidth,\n  onLineWidthChange,\n}) => {\n  const [open, setOpen] = React.useState(isOpen);\n  const lineWeightHandler = React.useCallback(\n    debounce((lineWidth) => onLineWidthChange(lineWidth), 300),\n    []\n  );\n\n  const handleLineWidthChange = (e) => {\n    lineWeightHandler(e.target.value);\n  };\n\n  React.useEffect(() => {\n    setOpen(isOpen);\n  }, [isOpen]);\n\n  return (\n    <>\n      <LineWeight />\n      <div>\n        <Popper\n          open={open}\n          anchorEl={anchorEl}\n          placement={placement}\n          transition\n          className=\"lineweight-input\"\n        >\n          {({ TransitionProps }) => (\n            <ClickAwayListener onClickAway={() => setOpen(false)}>\n              <Fade {...TransitionProps} timeout={350}>\n                <Paper className=\"lineweight-input-paper\" elevation={0}>\n                  <Input\n                    type=\"range\"\n                    disableUnderline\n                    onChange={handleLineWidthChange}\n                    defaultValue={lineWidth}\n                    inputProps={{\n                      min: 1,\n                    }}\n                  />\n                </Paper>\n              </Fade>\n            </ClickAwayListener>\n          )}\n        </Popper>\n      </div>\n    </>\n  );\n};\n\nLineWeightPicker.propTypes = {\n  isOpen: PropTypes.bool,\n  anchorEl: PropTypes.object,\n  placement: PropTypes.string,\n  lineWidth: PropTypes.string,\n  onLineWidthChange: PropTypes.func,\n};\n\nexport default LineWeightPicker;\n","import React from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Paint from \"./components/Paint/Paint\";\nimport \"./App.css\";\nimport {\n  AppBar,\n  Switch,\n  Toolbar,\n  Typography,\n  ThemeProvider,\n  CssBaseline,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n} from \"@material-ui/core\";\nimport {\n  orange,\n  lightBlue,\n  deepPurple,\n  deepOrange,\n} from \"@material-ui/core/colors\";\nimport {\n  Create,\n  Brush,\n  Gesture,\n  CheckBoxOutlineBlank,\n  RadioButtonUnchecked,\n  WbSunny,\n  NightsStay,\n  Clear,\n  GetAppRounded,\n} from \"@material-ui/icons\";\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\nimport LineWeightPicker from \"./components/LineWeightPicker/LineWeightPicker\";\n\nconst themeObject = {\n  palette: {\n    type: \"dark\",\n  },\n};\n\nconst light = {\n  palette: {\n    type: \"light\",\n  },\n};\n\nconst dark = {\n  palette: {\n    type: \"dark\",\n  },\n};\n\nfunction App() {\n  const themeConfig = createMuiTheme(themeObject);\n  const [color, setColor] = React.useState(\"\");\n  const [lineWidth, setlineWidth] = React.useState(\"\");\n  const [theme, setTheme] = React.useState(false);\n  const [toggleClear, setToggleClear] = React.useState(false);\n  const appliedTheme = createMuiTheme(theme ? dark : light);\n\n  // Line weight\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [placement, setPlacement] = React.useState();\n\n  const handleThemeChange = () => {\n    setTheme(!theme);\n  };\n\n  const handleClearCanvas = () => {\n    setlineWidth(\"\");\n    setToggleClear(!toggleClear);\n  };\n\n  const handleColorChange = (color) => {\n    setColor(color);\n  };\n\n  const handlePencilClick = () => {\n    setlineWidth(1);\n  };\n\n  const handleLineWeightClick = (newPlacement) => (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen((prev) => placement !== newPlacement || !prev);\n    setPlacement(newPlacement);\n  };\n\n  return (\n    <ThemeProvider theme={appliedTheme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <AppBar position=\"fixed\" color=\"inherit\" elevation={0}>\n          <Toolbar className=\"app-header\">\n            <Typography variant=\"h6\">React Paint</Typography>\n            <IconButton>\n              <GetAppRounded />\n            </IconButton>\n            <div className=\"dark-mode-switch\">\n              <div>\n                <WbSunny />\n              </div>\n              <Switch\n                checked={theme}\n                onChange={handleThemeChange}\n                color=\"default\"\n              />\n              <div>\n                <NightsStay />\n              </div>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" PaperProps={{ className: \"app-drawer\" }}>\n          <List className=\"drawer-content\">\n            <ListItem button className=\"drawer-content-button\">\n              <ColorPicker onColorChange={handleColorChange} />\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handlePencilClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Create />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handlePencilClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Gesture />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handlePencilClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Brush />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handleLineWeightClick(\"right\")}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <LineWeightPicker\n                  isOpen={open}\n                  lineWidth={lineWidth}\n                  anchorEl={anchorEl}\n                  placement={placement}\n                  onLineWidthChange={(value) => setlineWidth(value)}\n                />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handlePencilClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <CheckBoxOutlineBlank />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handlePencilClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <RadioButtonUnchecked />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handleClearCanvas}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Clear />\n              </ListItemIcon>\n            </ListItem>\n          </List>\n        </Drawer>\n        <Paint toggleClear={toggleClear} color={color} lineWidth={lineWidth} />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}