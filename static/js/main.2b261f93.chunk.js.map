{"version":3,"sources":["components/Paint/Paint.js","components/ColorPicker/ColorPicker.js","components/LineWeightPicker/LineWeightPicker.js","App.js","reportWebVitals.js","index.js"],"names":["Paint","props","React","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","height","canvas","useRef","ctx","lastX","lastY","hue","isDrawing","isWriting","useEffect","draw","current","className","toggleClear","strokeStyle","color","Number","lineWidth","classList","add","isSquare","isText","write","x","y","textarea","document","createElement","id","rows","cols","style","position","left","top","onblur","handleInputBlur","body","appendChild","focus","e","txtArray","textArray","target","value","split","parseInt","textBaseline","textAlign","fillStyle","forEach","txt","i","fillText","removeChild","handleRemoveInput","getContext","lineJoin","lineCap","font","handleMouseDown","nativeEvent","offsetX","offsetY","handleMouseMove","beginPath","moveTo","lineTo","stroke","ref","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseOut","onMouseMove","onTouchMove","onClick","ColorPicker","colorPickerRef","colorHandler","useCallback","debounce","onColorChange","InputLabel","ColorLens","Input","type","onChange","LineWeightPicker","isOpen","anchorEl","placement","onLineWidthChange","open","setOpen","lineWeightHandler","handleLineWidthChange","LineWeight","Popper","transition","TransitionProps","ClickAwayListener","onClickAway","Fade","timeout","Paper","elevation","disableUnderline","defaultValue","inputProps","min","themeObject","palette","light","dark","App","createMuiTheme","newPlacement","setColor","setlineWidth","theme","setTheme","setToggleClear","appliedTheme","setAnchorEl","setPlacement","setIsSquare","setIsText","handlePencilClick","ThemeProvider","CssBaseline","AppBar","Toolbar","Typography","variant","IconButton","GetAppRounded","WbSunny","Switch","checked","NightsStay","Drawer","PaperProps","List","ListItem","button","ListItemIcon","Create","Gesture","Brush","TextFields","event","currentTarget","prev","CheckBoxOutlineBlank","RadioButtonUnchecked","Clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2b261f93.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction useWindowSize() {\n  const [size, setSize] = React.useState([0, 0]);\n  React.useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n\nfunction Paint(props) {\n  const [width, height] = useWindowSize();\n  const canvas = React.useRef();\n  const ctx = React.useRef();\n  const lastX = React.useRef(0);\n  const lastY = React.useRef(0);\n  let hue = 0,\n    isDrawing = false,\n    isWriting = false,\n    hasInput = false;\n\n  React.useEffect(() => {\n    draw();\n  }, []);\n\n  React.useEffect(() => {\n    canvas.current.className = \"\";\n    draw();\n  }, [width, height, props.toggleClear]);\n\n  React.useEffect(() => {\n    ctx.current.strokeStyle = props.color;\n  }, [props.color]);\n\n  React.useEffect(() => {\n    if (Number(props.lineWidth) > 0) {\n      canvas.current.className = \"\";\n      canvas.current.classList.add(\"pencil\");\n      ctx.current.lineWidth = props.lineWidth;\n    }\n  }, [props.lineWidth]);\n\n  React.useEffect(() => {\n    if (props.isSquare) {\n      canvas.current.className = \"\";\n      canvas.current.classList.add(\"square\");\n    }\n  }, [props.isSquare]);\n\n  React.useEffect(() => {\n    if (props.isText) {\n      canvas.current.className = \"\";\n      canvas.current.classList.add(\"text\");\n      isWriting = true;\n    }\n  }, [props.isText]);\n\n  const handleTextClick = (e) => {\n    if (!isWriting) return;\n\n    write(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n  };\n\n  const write = (x, y) => {\n    const textarea = document.createElement(\"textarea\");\n\n    textarea.id = \"canvas-textarea\";\n    textarea.rows = 5;\n    textarea.cols = 30;\n    textarea.style.position = \"fixed\";\n    textarea.style.left = x - 4 + \"px\";\n    textarea.style.top = y - 4 + \"px\";\n\n    textarea.onblur = handleInputBlur;\n    document.body.appendChild(textarea);\n    textarea.focus();\n    hasInput = true;\n  };\n\n  const handleRemoveInput = (e) => {\n    document.body.removeChild(e.target);\n    hasInput = false;\n    isWriting = false;\n  };\n\n  const handleInputBlur = (e) => {\n    const textArray = e.target.value.split(\"\\n\");\n    drawText(\n      textArray,\n      parseInt(e.target.style.left, 10),\n      parseInt(e.target.style.top, 10)\n    );\n    handleRemoveInput(e);\n  };\n\n  function drawText(txtArray, x, y) {\n    ctx.current.textBaseline = \"top\";\n    ctx.current.textAlign = \"left\";\n    ctx.current.fillStyle = props.color;\n    txtArray.forEach((txt, i) => ctx.current.fillText(txt, x, y + i * 16));\n  }\n\n  const draw = () => {\n    canvas.current.width = width;\n    canvas.current.height = height;\n    ctx.current = canvas.current.getContext(\"2d\");\n    ctx.current.lineJoin = \"round\";\n    ctx.current.lineCap = \"round\";\n    ctx.current.font = \"16px Arial\";\n    ctx.current.lineWidth = 20;\n  };\n\n  const handleMouseDown = (e) => {\n    isDrawing = true;\n    lastX.current = e.nativeEvent.offsetX;\n    lastY.current = e.nativeEvent.offsetY;\n  };\n\n  const handleMouseMove = (e) => {\n    if (isDrawing && !isWriting) {\n      //   ctx.current.strokeStyle = `hsl(${hue}, 100%, 50%)`;\n      ctx.current.beginPath();\n      ctx.current.moveTo(lastX.current, lastY.current);\n      ctx.current.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      ctx.current.stroke();\n      [lastX.current, lastY.current] = [\n        e.nativeEvent.offsetX,\n        e.nativeEvent.offsetY,\n      ];\n\n      hue++;\n      if (hue >= 360) {\n        hue = 0;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <canvas\n        ref={canvas}\n        id=\"paint\"\n        onMouseDown={handleMouseDown}\n        onTouchStart={handleMouseDown}\n        onMouseUp={() => (isDrawing = false)}\n        onTouchEnd={() => (isDrawing = false)}\n        onMouseOut={() => (isDrawing = false)}\n        onMouseMove={handleMouseMove}\n        onTouchMove={handleMouseMove}\n        onClick={handleTextClick}\n      />\n    </div>\n  );\n}\n\nexport default Paint;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InputLabel, Input } from \"@material-ui/core\";\nimport { ColorLens } from \"@material-ui/icons\";\nimport { debounce } from \"lodash\";\nimport \"./ColorPicker.css\";\n\nColorPicker.propTypes = {\n  onColorChange: PropTypes.func,\n};\n\nfunction ColorPicker(props) {\n  const colorPickerRef = React.useRef();\n  const colorHandler = React.useCallback(\n    debounce((color) => props.onColorChange(color), 300),\n    []\n  );\n\n  const handleColorChange = (e) => {\n    colorHandler(e.target.value);\n    colorPickerRef.current.style.color = e.target.value;\n  };\n\n  return (\n    <InputLabel className=\"color-label\">\n      <div className=\"color-icon\">\n        <ColorLens ref={colorPickerRef} />\n      </div>\n      <Input\n        type=\"color\"\n        className=\"color-input\"\n        onChange={handleColorChange}\n      />\n    </InputLabel>\n  );\n}\n\nexport default ColorPicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popper,\n  ClickAwayListener,\n  Fade,\n  Paper,\n  Input,\n} from \"@material-ui/core\";\nimport { LineWeight } from \"@material-ui/icons\";\nimport { debounce } from \"lodash\";\n\nconst LineWeightPicker = ({\n  isOpen,\n  anchorEl,\n  placement,\n  lineWidth,\n  onLineWidthChange,\n}) => {\n  const [open, setOpen] = React.useState(isOpen);\n  const lineWeightHandler = React.useCallback(\n    debounce((lineWidth) => onLineWidthChange(lineWidth), 300),\n    []\n  );\n\n  const handleLineWidthChange = (e) => {\n    lineWeightHandler(e.target.value);\n  };\n\n  React.useEffect(() => {\n    setOpen(isOpen);\n  }, [isOpen]);\n\n  return (\n    <>\n      <LineWeight />\n      <div>\n        <Popper\n          open={open}\n          anchorEl={anchorEl}\n          placement={placement}\n          transition\n          className=\"lineweight-input\"\n        >\n          {({ TransitionProps }) => (\n            <ClickAwayListener onClickAway={() => setOpen(false)}>\n              <Fade {...TransitionProps} timeout={350}>\n                <Paper className=\"lineweight-input-paper\" elevation={0}>\n                  <Input\n                    type=\"range\"\n                    disableUnderline\n                    onChange={handleLineWidthChange}\n                    defaultValue={lineWidth}\n                    inputProps={{\n                      min: 1,\n                    }}\n                  />\n                </Paper>\n              </Fade>\n            </ClickAwayListener>\n          )}\n        </Popper>\n      </div>\n    </>\n  );\n};\n\nLineWeightPicker.propTypes = {\n  isOpen: PropTypes.bool,\n  anchorEl: PropTypes.object,\n  placement: PropTypes.string,\n  lineWidth: PropTypes.string,\n  onLineWidthChange: PropTypes.func,\n};\n\nexport default LineWeightPicker;\n","import React from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Paint from \"./components/Paint/Paint\";\nimport \"./App.css\";\nimport {\n  AppBar,\n  Switch,\n  Toolbar,\n  Typography,\n  ThemeProvider,\n  CssBaseline,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n} from \"@material-ui/core\";\nimport {\n  orange,\n  lightBlue,\n  deepPurple,\n  deepOrange,\n} from \"@material-ui/core/colors\";\nimport {\n  Create,\n  Brush,\n  Gesture,\n  CheckBoxOutlineBlank,\n  RadioButtonUnchecked,\n  WbSunny,\n  NightsStay,\n  Clear,\n  GetAppRounded,\n  TextFields,\n} from \"@material-ui/icons\";\nimport ColorPicker from \"./components/ColorPicker/ColorPicker\";\nimport LineWeightPicker from \"./components/LineWeightPicker/LineWeightPicker\";\n\nconst themeObject = {\n  palette: {\n    type: \"dark\",\n  },\n};\n\nconst light = {\n  palette: {\n    type: \"light\",\n  },\n};\n\nconst dark = {\n  palette: {\n    type: \"dark\",\n  },\n};\n\nfunction App() {\n  const themeConfig = createMuiTheme(themeObject);\n  const [color, setColor] = React.useState(\"\");\n  const [lineWidth, setlineWidth] = React.useState(\"\");\n  const [theme, setTheme] = React.useState(false);\n  const [toggleClear, setToggleClear] = React.useState(false);\n  const appliedTheme = createMuiTheme(theme ? dark : light);\n\n  // Line weight\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [placement, setPlacement] = React.useState();\n\n  // Square\n  const [isSquare, setIsSquare] = React.useState(false);\n\n  // Text\n  const [isText, setIsText] = React.useState(false);\n\n  const handleThemeChange = () => {\n    setTheme(!theme);\n  };\n\n  const handleClearCanvas = () => {\n    setlineWidth(\"\");\n    setToggleClear(!toggleClear);\n  };\n\n  const handleColorChange = (color) => {\n    setIsSquare(false);\n    setIsText(false);\n    setColor(color);\n  };\n\n  const handlePencilClick = () => {\n    setIsSquare(false);\n    setIsText(false);\n    setlineWidth(\"1\");\n  };\n\n  const handleTextClick = () => {\n    setIsSquare(false);\n    setIsText(true);\n  };\n\n  const handleLineWeightClick = (newPlacement) => (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen((prev) => placement !== newPlacement || !prev);\n    setPlacement(newPlacement);\n  };\n\n  const handleSquareClick = () => {\n    setIsText(false);\n    setIsSquare(true);\n  };\n\n  return (\n    <ThemeProvider theme={appliedTheme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <AppBar position=\"fixed\" color=\"inherit\" elevation={0}>\n          <Toolbar className=\"app-header\">\n            <Typography variant=\"h6\">React Paint</Typography>\n            <IconButton>\n              <GetAppRounded />\n            </IconButton>\n            <div className=\"dark-mode-switch\">\n              <div>\n                <WbSunny />\n              </div>\n              <Switch\n                checked={theme}\n                onChange={handleThemeChange}\n                color=\"default\"\n              />\n              <div>\n                <NightsStay />\n              </div>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" PaperProps={{ className: \"app-drawer\" }}>\n          <List className=\"drawer-content\">\n            <ListItem button className=\"drawer-content-button\">\n              <ColorPicker onColorChange={handleColorChange} />\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handlePencilClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Create />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handlePencilClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Gesture />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handlePencilClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Brush />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handleTextClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <TextFields />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handleLineWeightClick(\"right\")}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <LineWeightPicker\n                  isOpen={open}\n                  lineWidth={lineWidth}\n                  anchorEl={anchorEl}\n                  placement={placement}\n                  onLineWidthChange={(value) => setlineWidth(value)}\n                />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handleSquareClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <CheckBoxOutlineBlank />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handlePencilClick}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <RadioButtonUnchecked />\n              </ListItemIcon>\n            </ListItem>\n            <ListItem\n              button\n              className=\"drawer-content-button\"\n              onClick={handleClearCanvas}\n            >\n              <ListItemIcon className=\"drawer-icon\">\n                <Clear />\n              </ListItemIcon>\n            </ListItem>\n          </List>\n        </Drawer>\n        <Paint\n          toggleClear={toggleClear}\n          color={color}\n          lineWidth={lineWidth}\n          isSquare={isSquare}\n          isText={isText}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}